on:
  push:
name: test
jobs:
  run:
    name: get traffic
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2.3.2

    - name: getViews
      uses: actions/github-script@v3.0.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const octokit = new getOctokit(github-token)
          const views = await octokit.repos.getViews({
              owner: context.repo.owner,
              repo: context.repo.repo,
          });
          console.log('### views begin ###');
          console.log(views);
          console.log('### views end ###');
          console.log('type of views' + typeof (views));


    - name: getTopReferrers
      uses: actions/github-script@v3.0.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const octokit = new getOctokit(github-token)
          const topreferrers = await octokit.repos.getTopReferrers({
              owner: context.repo.owner,
              repo: context.repo.repo,
          });
          console.log('### topreferrers begin ###');
          console.log(views);
          console.log('### topreferrers end ###');
          console.log('type of topreferrers' + typeof (topreferrers));

    - name: getTopPaths
      uses: actions/github-script@v3.0.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const octokit = new getOctokit(github-token)
          const toppaths = await octokit.repos.getTopPaths({
              owner: context.repo.owner,
              repo: context.repo.repo,
          });
          console.log('### toppaths begin ###');
          console.log(views);
          console.log('### toppaths end ###');
          console.log('type of toppaths' + typeof (toppaths));

    - name: getClones
      uses: actions/github-script@v3.0.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const octokit = new getOctokit(github-token)
          const clones = await octokit.repos.getClones({
              owner: context.repo.owner,
              repo: context.repo.repo,
          });
          console.log('### clones begin ###');
          console.log(views);
          console.log('### clones end ###');
          console.log('type of clones' + typeof (clones));
